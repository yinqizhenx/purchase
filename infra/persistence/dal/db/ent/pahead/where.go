// Code generated by ent, DO NOT EDIT.

package pahead

import (
	"purchase/infra/persistence/dal/db/ent/predicate"
	"time"

	"entgo.io/ent/dialect/sql"
)

// ID filters vertices based on their ID field.
func ID(id int64) predicate.PAHead {
	return predicate.PAHead(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int64) predicate.PAHead {
	return predicate.PAHead(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int64) predicate.PAHead {
	return predicate.PAHead(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int64) predicate.PAHead {
	return predicate.PAHead(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int64) predicate.PAHead {
	return predicate.PAHead(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int64) predicate.PAHead {
	return predicate.PAHead(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int64) predicate.PAHead {
	return predicate.PAHead(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int64) predicate.PAHead {
	return predicate.PAHead(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int64) predicate.PAHead {
	return predicate.PAHead(sql.FieldLTE(FieldID, id))
}

// Code applies equality check predicate on the "code" field. It's identical to CodeEQ.
func Code(v string) predicate.PAHead {
	return predicate.PAHead(sql.FieldEQ(FieldCode, v))
}

// State applies equality check predicate on the "state" field. It's identical to StateEQ.
func State(v string) predicate.PAHead {
	return predicate.PAHead(sql.FieldEQ(FieldState, v))
}

// PayAmount applies equality check predicate on the "pay_amount" field. It's identical to PayAmountEQ.
func PayAmount(v string) predicate.PAHead {
	return predicate.PAHead(sql.FieldEQ(FieldPayAmount, v))
}

// Applicant applies equality check predicate on the "applicant" field. It's identical to ApplicantEQ.
func Applicant(v string) predicate.PAHead {
	return predicate.PAHead(sql.FieldEQ(FieldApplicant, v))
}

// DepartmentCode applies equality check predicate on the "department_code" field. It's identical to DepartmentCodeEQ.
func DepartmentCode(v string) predicate.PAHead {
	return predicate.PAHead(sql.FieldEQ(FieldDepartmentCode, v))
}

// SupplierCode applies equality check predicate on the "supplier_code" field. It's identical to SupplierCodeEQ.
func SupplierCode(v string) predicate.PAHead {
	return predicate.PAHead(sql.FieldEQ(FieldSupplierCode, v))
}

// IsAdv applies equality check predicate on the "is_adv" field. It's identical to IsAdvEQ.
func IsAdv(v bool) predicate.PAHead {
	return predicate.PAHead(sql.FieldEQ(FieldIsAdv, v))
}

// HasInvoice applies equality check predicate on the "has_invoice" field. It's identical to HasInvoiceEQ.
func HasInvoice(v bool) predicate.PAHead {
	return predicate.PAHead(sql.FieldEQ(FieldHasInvoice, v))
}

// Remark applies equality check predicate on the "remark" field. It's identical to RemarkEQ.
func Remark(v string) predicate.PAHead {
	return predicate.PAHead(sql.FieldEQ(FieldRemark, v))
}

// CreatedAt applies equality check predicate on the "created_at" field. It's identical to CreatedAtEQ.
func CreatedAt(v time.Time) predicate.PAHead {
	return predicate.PAHead(sql.FieldEQ(FieldCreatedAt, v))
}

// UpdatedAt applies equality check predicate on the "updated_at" field. It's identical to UpdatedAtEQ.
func UpdatedAt(v time.Time) predicate.PAHead {
	return predicate.PAHead(sql.FieldEQ(FieldUpdatedAt, v))
}

// CodeEQ applies the EQ predicate on the "code" field.
func CodeEQ(v string) predicate.PAHead {
	return predicate.PAHead(sql.FieldEQ(FieldCode, v))
}

// CodeNEQ applies the NEQ predicate on the "code" field.
func CodeNEQ(v string) predicate.PAHead {
	return predicate.PAHead(sql.FieldNEQ(FieldCode, v))
}

// CodeIn applies the In predicate on the "code" field.
func CodeIn(vs ...string) predicate.PAHead {
	return predicate.PAHead(sql.FieldIn(FieldCode, vs...))
}

// CodeNotIn applies the NotIn predicate on the "code" field.
func CodeNotIn(vs ...string) predicate.PAHead {
	return predicate.PAHead(sql.FieldNotIn(FieldCode, vs...))
}

// CodeGT applies the GT predicate on the "code" field.
func CodeGT(v string) predicate.PAHead {
	return predicate.PAHead(sql.FieldGT(FieldCode, v))
}

// CodeGTE applies the GTE predicate on the "code" field.
func CodeGTE(v string) predicate.PAHead {
	return predicate.PAHead(sql.FieldGTE(FieldCode, v))
}

// CodeLT applies the LT predicate on the "code" field.
func CodeLT(v string) predicate.PAHead {
	return predicate.PAHead(sql.FieldLT(FieldCode, v))
}

// CodeLTE applies the LTE predicate on the "code" field.
func CodeLTE(v string) predicate.PAHead {
	return predicate.PAHead(sql.FieldLTE(FieldCode, v))
}

// CodeContains applies the Contains predicate on the "code" field.
func CodeContains(v string) predicate.PAHead {
	return predicate.PAHead(sql.FieldContains(FieldCode, v))
}

// CodeHasPrefix applies the HasPrefix predicate on the "code" field.
func CodeHasPrefix(v string) predicate.PAHead {
	return predicate.PAHead(sql.FieldHasPrefix(FieldCode, v))
}

// CodeHasSuffix applies the HasSuffix predicate on the "code" field.
func CodeHasSuffix(v string) predicate.PAHead {
	return predicate.PAHead(sql.FieldHasSuffix(FieldCode, v))
}

// CodeEqualFold applies the EqualFold predicate on the "code" field.
func CodeEqualFold(v string) predicate.PAHead {
	return predicate.PAHead(sql.FieldEqualFold(FieldCode, v))
}

// CodeContainsFold applies the ContainsFold predicate on the "code" field.
func CodeContainsFold(v string) predicate.PAHead {
	return predicate.PAHead(sql.FieldContainsFold(FieldCode, v))
}

// StateEQ applies the EQ predicate on the "state" field.
func StateEQ(v string) predicate.PAHead {
	return predicate.PAHead(sql.FieldEQ(FieldState, v))
}

// StateNEQ applies the NEQ predicate on the "state" field.
func StateNEQ(v string) predicate.PAHead {
	return predicate.PAHead(sql.FieldNEQ(FieldState, v))
}

// StateIn applies the In predicate on the "state" field.
func StateIn(vs ...string) predicate.PAHead {
	return predicate.PAHead(sql.FieldIn(FieldState, vs...))
}

// StateNotIn applies the NotIn predicate on the "state" field.
func StateNotIn(vs ...string) predicate.PAHead {
	return predicate.PAHead(sql.FieldNotIn(FieldState, vs...))
}

// StateGT applies the GT predicate on the "state" field.
func StateGT(v string) predicate.PAHead {
	return predicate.PAHead(sql.FieldGT(FieldState, v))
}

// StateGTE applies the GTE predicate on the "state" field.
func StateGTE(v string) predicate.PAHead {
	return predicate.PAHead(sql.FieldGTE(FieldState, v))
}

// StateLT applies the LT predicate on the "state" field.
func StateLT(v string) predicate.PAHead {
	return predicate.PAHead(sql.FieldLT(FieldState, v))
}

// StateLTE applies the LTE predicate on the "state" field.
func StateLTE(v string) predicate.PAHead {
	return predicate.PAHead(sql.FieldLTE(FieldState, v))
}

// StateContains applies the Contains predicate on the "state" field.
func StateContains(v string) predicate.PAHead {
	return predicate.PAHead(sql.FieldContains(FieldState, v))
}

// StateHasPrefix applies the HasPrefix predicate on the "state" field.
func StateHasPrefix(v string) predicate.PAHead {
	return predicate.PAHead(sql.FieldHasPrefix(FieldState, v))
}

// StateHasSuffix applies the HasSuffix predicate on the "state" field.
func StateHasSuffix(v string) predicate.PAHead {
	return predicate.PAHead(sql.FieldHasSuffix(FieldState, v))
}

// StateEqualFold applies the EqualFold predicate on the "state" field.
func StateEqualFold(v string) predicate.PAHead {
	return predicate.PAHead(sql.FieldEqualFold(FieldState, v))
}

// StateContainsFold applies the ContainsFold predicate on the "state" field.
func StateContainsFold(v string) predicate.PAHead {
	return predicate.PAHead(sql.FieldContainsFold(FieldState, v))
}

// PayAmountEQ applies the EQ predicate on the "pay_amount" field.
func PayAmountEQ(v string) predicate.PAHead {
	return predicate.PAHead(sql.FieldEQ(FieldPayAmount, v))
}

// PayAmountNEQ applies the NEQ predicate on the "pay_amount" field.
func PayAmountNEQ(v string) predicate.PAHead {
	return predicate.PAHead(sql.FieldNEQ(FieldPayAmount, v))
}

// PayAmountIn applies the In predicate on the "pay_amount" field.
func PayAmountIn(vs ...string) predicate.PAHead {
	return predicate.PAHead(sql.FieldIn(FieldPayAmount, vs...))
}

// PayAmountNotIn applies the NotIn predicate on the "pay_amount" field.
func PayAmountNotIn(vs ...string) predicate.PAHead {
	return predicate.PAHead(sql.FieldNotIn(FieldPayAmount, vs...))
}

// PayAmountGT applies the GT predicate on the "pay_amount" field.
func PayAmountGT(v string) predicate.PAHead {
	return predicate.PAHead(sql.FieldGT(FieldPayAmount, v))
}

// PayAmountGTE applies the GTE predicate on the "pay_amount" field.
func PayAmountGTE(v string) predicate.PAHead {
	return predicate.PAHead(sql.FieldGTE(FieldPayAmount, v))
}

// PayAmountLT applies the LT predicate on the "pay_amount" field.
func PayAmountLT(v string) predicate.PAHead {
	return predicate.PAHead(sql.FieldLT(FieldPayAmount, v))
}

// PayAmountLTE applies the LTE predicate on the "pay_amount" field.
func PayAmountLTE(v string) predicate.PAHead {
	return predicate.PAHead(sql.FieldLTE(FieldPayAmount, v))
}

// PayAmountContains applies the Contains predicate on the "pay_amount" field.
func PayAmountContains(v string) predicate.PAHead {
	return predicate.PAHead(sql.FieldContains(FieldPayAmount, v))
}

// PayAmountHasPrefix applies the HasPrefix predicate on the "pay_amount" field.
func PayAmountHasPrefix(v string) predicate.PAHead {
	return predicate.PAHead(sql.FieldHasPrefix(FieldPayAmount, v))
}

// PayAmountHasSuffix applies the HasSuffix predicate on the "pay_amount" field.
func PayAmountHasSuffix(v string) predicate.PAHead {
	return predicate.PAHead(sql.FieldHasSuffix(FieldPayAmount, v))
}

// PayAmountEqualFold applies the EqualFold predicate on the "pay_amount" field.
func PayAmountEqualFold(v string) predicate.PAHead {
	return predicate.PAHead(sql.FieldEqualFold(FieldPayAmount, v))
}

// PayAmountContainsFold applies the ContainsFold predicate on the "pay_amount" field.
func PayAmountContainsFold(v string) predicate.PAHead {
	return predicate.PAHead(sql.FieldContainsFold(FieldPayAmount, v))
}

// ApplicantEQ applies the EQ predicate on the "applicant" field.
func ApplicantEQ(v string) predicate.PAHead {
	return predicate.PAHead(sql.FieldEQ(FieldApplicant, v))
}

// ApplicantNEQ applies the NEQ predicate on the "applicant" field.
func ApplicantNEQ(v string) predicate.PAHead {
	return predicate.PAHead(sql.FieldNEQ(FieldApplicant, v))
}

// ApplicantIn applies the In predicate on the "applicant" field.
func ApplicantIn(vs ...string) predicate.PAHead {
	return predicate.PAHead(sql.FieldIn(FieldApplicant, vs...))
}

// ApplicantNotIn applies the NotIn predicate on the "applicant" field.
func ApplicantNotIn(vs ...string) predicate.PAHead {
	return predicate.PAHead(sql.FieldNotIn(FieldApplicant, vs...))
}

// ApplicantGT applies the GT predicate on the "applicant" field.
func ApplicantGT(v string) predicate.PAHead {
	return predicate.PAHead(sql.FieldGT(FieldApplicant, v))
}

// ApplicantGTE applies the GTE predicate on the "applicant" field.
func ApplicantGTE(v string) predicate.PAHead {
	return predicate.PAHead(sql.FieldGTE(FieldApplicant, v))
}

// ApplicantLT applies the LT predicate on the "applicant" field.
func ApplicantLT(v string) predicate.PAHead {
	return predicate.PAHead(sql.FieldLT(FieldApplicant, v))
}

// ApplicantLTE applies the LTE predicate on the "applicant" field.
func ApplicantLTE(v string) predicate.PAHead {
	return predicate.PAHead(sql.FieldLTE(FieldApplicant, v))
}

// ApplicantContains applies the Contains predicate on the "applicant" field.
func ApplicantContains(v string) predicate.PAHead {
	return predicate.PAHead(sql.FieldContains(FieldApplicant, v))
}

// ApplicantHasPrefix applies the HasPrefix predicate on the "applicant" field.
func ApplicantHasPrefix(v string) predicate.PAHead {
	return predicate.PAHead(sql.FieldHasPrefix(FieldApplicant, v))
}

// ApplicantHasSuffix applies the HasSuffix predicate on the "applicant" field.
func ApplicantHasSuffix(v string) predicate.PAHead {
	return predicate.PAHead(sql.FieldHasSuffix(FieldApplicant, v))
}

// ApplicantEqualFold applies the EqualFold predicate on the "applicant" field.
func ApplicantEqualFold(v string) predicate.PAHead {
	return predicate.PAHead(sql.FieldEqualFold(FieldApplicant, v))
}

// ApplicantContainsFold applies the ContainsFold predicate on the "applicant" field.
func ApplicantContainsFold(v string) predicate.PAHead {
	return predicate.PAHead(sql.FieldContainsFold(FieldApplicant, v))
}

// DepartmentCodeEQ applies the EQ predicate on the "department_code" field.
func DepartmentCodeEQ(v string) predicate.PAHead {
	return predicate.PAHead(sql.FieldEQ(FieldDepartmentCode, v))
}

// DepartmentCodeNEQ applies the NEQ predicate on the "department_code" field.
func DepartmentCodeNEQ(v string) predicate.PAHead {
	return predicate.PAHead(sql.FieldNEQ(FieldDepartmentCode, v))
}

// DepartmentCodeIn applies the In predicate on the "department_code" field.
func DepartmentCodeIn(vs ...string) predicate.PAHead {
	return predicate.PAHead(sql.FieldIn(FieldDepartmentCode, vs...))
}

// DepartmentCodeNotIn applies the NotIn predicate on the "department_code" field.
func DepartmentCodeNotIn(vs ...string) predicate.PAHead {
	return predicate.PAHead(sql.FieldNotIn(FieldDepartmentCode, vs...))
}

// DepartmentCodeGT applies the GT predicate on the "department_code" field.
func DepartmentCodeGT(v string) predicate.PAHead {
	return predicate.PAHead(sql.FieldGT(FieldDepartmentCode, v))
}

// DepartmentCodeGTE applies the GTE predicate on the "department_code" field.
func DepartmentCodeGTE(v string) predicate.PAHead {
	return predicate.PAHead(sql.FieldGTE(FieldDepartmentCode, v))
}

// DepartmentCodeLT applies the LT predicate on the "department_code" field.
func DepartmentCodeLT(v string) predicate.PAHead {
	return predicate.PAHead(sql.FieldLT(FieldDepartmentCode, v))
}

// DepartmentCodeLTE applies the LTE predicate on the "department_code" field.
func DepartmentCodeLTE(v string) predicate.PAHead {
	return predicate.PAHead(sql.FieldLTE(FieldDepartmentCode, v))
}

// DepartmentCodeContains applies the Contains predicate on the "department_code" field.
func DepartmentCodeContains(v string) predicate.PAHead {
	return predicate.PAHead(sql.FieldContains(FieldDepartmentCode, v))
}

// DepartmentCodeHasPrefix applies the HasPrefix predicate on the "department_code" field.
func DepartmentCodeHasPrefix(v string) predicate.PAHead {
	return predicate.PAHead(sql.FieldHasPrefix(FieldDepartmentCode, v))
}

// DepartmentCodeHasSuffix applies the HasSuffix predicate on the "department_code" field.
func DepartmentCodeHasSuffix(v string) predicate.PAHead {
	return predicate.PAHead(sql.FieldHasSuffix(FieldDepartmentCode, v))
}

// DepartmentCodeIsNil applies the IsNil predicate on the "department_code" field.
func DepartmentCodeIsNil() predicate.PAHead {
	return predicate.PAHead(sql.FieldIsNull(FieldDepartmentCode))
}

// DepartmentCodeNotNil applies the NotNil predicate on the "department_code" field.
func DepartmentCodeNotNil() predicate.PAHead {
	return predicate.PAHead(sql.FieldNotNull(FieldDepartmentCode))
}

// DepartmentCodeEqualFold applies the EqualFold predicate on the "department_code" field.
func DepartmentCodeEqualFold(v string) predicate.PAHead {
	return predicate.PAHead(sql.FieldEqualFold(FieldDepartmentCode, v))
}

// DepartmentCodeContainsFold applies the ContainsFold predicate on the "department_code" field.
func DepartmentCodeContainsFold(v string) predicate.PAHead {
	return predicate.PAHead(sql.FieldContainsFold(FieldDepartmentCode, v))
}

// SupplierCodeEQ applies the EQ predicate on the "supplier_code" field.
func SupplierCodeEQ(v string) predicate.PAHead {
	return predicate.PAHead(sql.FieldEQ(FieldSupplierCode, v))
}

// SupplierCodeNEQ applies the NEQ predicate on the "supplier_code" field.
func SupplierCodeNEQ(v string) predicate.PAHead {
	return predicate.PAHead(sql.FieldNEQ(FieldSupplierCode, v))
}

// SupplierCodeIn applies the In predicate on the "supplier_code" field.
func SupplierCodeIn(vs ...string) predicate.PAHead {
	return predicate.PAHead(sql.FieldIn(FieldSupplierCode, vs...))
}

// SupplierCodeNotIn applies the NotIn predicate on the "supplier_code" field.
func SupplierCodeNotIn(vs ...string) predicate.PAHead {
	return predicate.PAHead(sql.FieldNotIn(FieldSupplierCode, vs...))
}

// SupplierCodeGT applies the GT predicate on the "supplier_code" field.
func SupplierCodeGT(v string) predicate.PAHead {
	return predicate.PAHead(sql.FieldGT(FieldSupplierCode, v))
}

// SupplierCodeGTE applies the GTE predicate on the "supplier_code" field.
func SupplierCodeGTE(v string) predicate.PAHead {
	return predicate.PAHead(sql.FieldGTE(FieldSupplierCode, v))
}

// SupplierCodeLT applies the LT predicate on the "supplier_code" field.
func SupplierCodeLT(v string) predicate.PAHead {
	return predicate.PAHead(sql.FieldLT(FieldSupplierCode, v))
}

// SupplierCodeLTE applies the LTE predicate on the "supplier_code" field.
func SupplierCodeLTE(v string) predicate.PAHead {
	return predicate.PAHead(sql.FieldLTE(FieldSupplierCode, v))
}

// SupplierCodeContains applies the Contains predicate on the "supplier_code" field.
func SupplierCodeContains(v string) predicate.PAHead {
	return predicate.PAHead(sql.FieldContains(FieldSupplierCode, v))
}

// SupplierCodeHasPrefix applies the HasPrefix predicate on the "supplier_code" field.
func SupplierCodeHasPrefix(v string) predicate.PAHead {
	return predicate.PAHead(sql.FieldHasPrefix(FieldSupplierCode, v))
}

// SupplierCodeHasSuffix applies the HasSuffix predicate on the "supplier_code" field.
func SupplierCodeHasSuffix(v string) predicate.PAHead {
	return predicate.PAHead(sql.FieldHasSuffix(FieldSupplierCode, v))
}

// SupplierCodeEqualFold applies the EqualFold predicate on the "supplier_code" field.
func SupplierCodeEqualFold(v string) predicate.PAHead {
	return predicate.PAHead(sql.FieldEqualFold(FieldSupplierCode, v))
}

// SupplierCodeContainsFold applies the ContainsFold predicate on the "supplier_code" field.
func SupplierCodeContainsFold(v string) predicate.PAHead {
	return predicate.PAHead(sql.FieldContainsFold(FieldSupplierCode, v))
}

// IsAdvEQ applies the EQ predicate on the "is_adv" field.
func IsAdvEQ(v bool) predicate.PAHead {
	return predicate.PAHead(sql.FieldEQ(FieldIsAdv, v))
}

// IsAdvNEQ applies the NEQ predicate on the "is_adv" field.
func IsAdvNEQ(v bool) predicate.PAHead {
	return predicate.PAHead(sql.FieldNEQ(FieldIsAdv, v))
}

// HasInvoiceEQ applies the EQ predicate on the "has_invoice" field.
func HasInvoiceEQ(v bool) predicate.PAHead {
	return predicate.PAHead(sql.FieldEQ(FieldHasInvoice, v))
}

// HasInvoiceNEQ applies the NEQ predicate on the "has_invoice" field.
func HasInvoiceNEQ(v bool) predicate.PAHead {
	return predicate.PAHead(sql.FieldNEQ(FieldHasInvoice, v))
}

// RemarkEQ applies the EQ predicate on the "remark" field.
func RemarkEQ(v string) predicate.PAHead {
	return predicate.PAHead(sql.FieldEQ(FieldRemark, v))
}

// RemarkNEQ applies the NEQ predicate on the "remark" field.
func RemarkNEQ(v string) predicate.PAHead {
	return predicate.PAHead(sql.FieldNEQ(FieldRemark, v))
}

// RemarkIn applies the In predicate on the "remark" field.
func RemarkIn(vs ...string) predicate.PAHead {
	return predicate.PAHead(sql.FieldIn(FieldRemark, vs...))
}

// RemarkNotIn applies the NotIn predicate on the "remark" field.
func RemarkNotIn(vs ...string) predicate.PAHead {
	return predicate.PAHead(sql.FieldNotIn(FieldRemark, vs...))
}

// RemarkGT applies the GT predicate on the "remark" field.
func RemarkGT(v string) predicate.PAHead {
	return predicate.PAHead(sql.FieldGT(FieldRemark, v))
}

// RemarkGTE applies the GTE predicate on the "remark" field.
func RemarkGTE(v string) predicate.PAHead {
	return predicate.PAHead(sql.FieldGTE(FieldRemark, v))
}

// RemarkLT applies the LT predicate on the "remark" field.
func RemarkLT(v string) predicate.PAHead {
	return predicate.PAHead(sql.FieldLT(FieldRemark, v))
}

// RemarkLTE applies the LTE predicate on the "remark" field.
func RemarkLTE(v string) predicate.PAHead {
	return predicate.PAHead(sql.FieldLTE(FieldRemark, v))
}

// RemarkContains applies the Contains predicate on the "remark" field.
func RemarkContains(v string) predicate.PAHead {
	return predicate.PAHead(sql.FieldContains(FieldRemark, v))
}

// RemarkHasPrefix applies the HasPrefix predicate on the "remark" field.
func RemarkHasPrefix(v string) predicate.PAHead {
	return predicate.PAHead(sql.FieldHasPrefix(FieldRemark, v))
}

// RemarkHasSuffix applies the HasSuffix predicate on the "remark" field.
func RemarkHasSuffix(v string) predicate.PAHead {
	return predicate.PAHead(sql.FieldHasSuffix(FieldRemark, v))
}

// RemarkEqualFold applies the EqualFold predicate on the "remark" field.
func RemarkEqualFold(v string) predicate.PAHead {
	return predicate.PAHead(sql.FieldEqualFold(FieldRemark, v))
}

// RemarkContainsFold applies the ContainsFold predicate on the "remark" field.
func RemarkContainsFold(v string) predicate.PAHead {
	return predicate.PAHead(sql.FieldContainsFold(FieldRemark, v))
}

// CreatedAtEQ applies the EQ predicate on the "created_at" field.
func CreatedAtEQ(v time.Time) predicate.PAHead {
	return predicate.PAHead(sql.FieldEQ(FieldCreatedAt, v))
}

// CreatedAtNEQ applies the NEQ predicate on the "created_at" field.
func CreatedAtNEQ(v time.Time) predicate.PAHead {
	return predicate.PAHead(sql.FieldNEQ(FieldCreatedAt, v))
}

// CreatedAtIn applies the In predicate on the "created_at" field.
func CreatedAtIn(vs ...time.Time) predicate.PAHead {
	return predicate.PAHead(sql.FieldIn(FieldCreatedAt, vs...))
}

// CreatedAtNotIn applies the NotIn predicate on the "created_at" field.
func CreatedAtNotIn(vs ...time.Time) predicate.PAHead {
	return predicate.PAHead(sql.FieldNotIn(FieldCreatedAt, vs...))
}

// CreatedAtGT applies the GT predicate on the "created_at" field.
func CreatedAtGT(v time.Time) predicate.PAHead {
	return predicate.PAHead(sql.FieldGT(FieldCreatedAt, v))
}

// CreatedAtGTE applies the GTE predicate on the "created_at" field.
func CreatedAtGTE(v time.Time) predicate.PAHead {
	return predicate.PAHead(sql.FieldGTE(FieldCreatedAt, v))
}

// CreatedAtLT applies the LT predicate on the "created_at" field.
func CreatedAtLT(v time.Time) predicate.PAHead {
	return predicate.PAHead(sql.FieldLT(FieldCreatedAt, v))
}

// CreatedAtLTE applies the LTE predicate on the "created_at" field.
func CreatedAtLTE(v time.Time) predicate.PAHead {
	return predicate.PAHead(sql.FieldLTE(FieldCreatedAt, v))
}

// UpdatedAtEQ applies the EQ predicate on the "updated_at" field.
func UpdatedAtEQ(v time.Time) predicate.PAHead {
	return predicate.PAHead(sql.FieldEQ(FieldUpdatedAt, v))
}

// UpdatedAtNEQ applies the NEQ predicate on the "updated_at" field.
func UpdatedAtNEQ(v time.Time) predicate.PAHead {
	return predicate.PAHead(sql.FieldNEQ(FieldUpdatedAt, v))
}

// UpdatedAtIn applies the In predicate on the "updated_at" field.
func UpdatedAtIn(vs ...time.Time) predicate.PAHead {
	return predicate.PAHead(sql.FieldIn(FieldUpdatedAt, vs...))
}

// UpdatedAtNotIn applies the NotIn predicate on the "updated_at" field.
func UpdatedAtNotIn(vs ...time.Time) predicate.PAHead {
	return predicate.PAHead(sql.FieldNotIn(FieldUpdatedAt, vs...))
}

// UpdatedAtGT applies the GT predicate on the "updated_at" field.
func UpdatedAtGT(v time.Time) predicate.PAHead {
	return predicate.PAHead(sql.FieldGT(FieldUpdatedAt, v))
}

// UpdatedAtGTE applies the GTE predicate on the "updated_at" field.
func UpdatedAtGTE(v time.Time) predicate.PAHead {
	return predicate.PAHead(sql.FieldGTE(FieldUpdatedAt, v))
}

// UpdatedAtLT applies the LT predicate on the "updated_at" field.
func UpdatedAtLT(v time.Time) predicate.PAHead {
	return predicate.PAHead(sql.FieldLT(FieldUpdatedAt, v))
}

// UpdatedAtLTE applies the LTE predicate on the "updated_at" field.
func UpdatedAtLTE(v time.Time) predicate.PAHead {
	return predicate.PAHead(sql.FieldLTE(FieldUpdatedAt, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.PAHead) predicate.PAHead {
	return predicate.PAHead(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.PAHead) predicate.PAHead {
	return predicate.PAHead(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.PAHead) predicate.PAHead {
	return predicate.PAHead(sql.NotPredicates(p))
}
